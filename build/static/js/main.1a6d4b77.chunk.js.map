{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","productAlreadyInCart","find","product","id","get","data","amount","setItem","stringify","toast","updateCart","map","cartItem","Number","error","updateProductAmount","response","productAmount","some","cartProduct","Provider","value","removeProduct","filter","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","useEffect","productsFormated","price","loadProducts","src","image","alt","title","type","data-testid","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","priceFormatted","subtotal","total","sumTotal","aria-label","disabled","IncrementArguments","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a6d4b77.chunk.js","sourcesContent":["/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport axios from 'axios';\n\nexport const api = axios.create({\n    baseURL: 'http://localhost:3333',\n});\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\n    style: 'currency',\n    currency: 'BRL',\n});\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport { createContext, ReactNode, useContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { api } from \"../services/api\";\nimport { Product, Stock } from \"../types\";\n\ninterface CartProviderProps {\n    children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n    productId: number;\n    amount: number;\n}\n\ninterface CartContextData {\n    cart: Product[];\n    addProduct: (productId: number) => Promise<void>;\n    removeProduct: (productId: number) => void;\n    updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n    const [cart, setCart] = useState<Product[]>(() => {\n        const storagedCart = localStorage.getItem(\"@RocktShoes:cart\");\n\n        if (storagedCart) {\n            return JSON.parse(storagedCart);\n        }\n\n        return [];\n    });\n\n    const addProduct = async (productId: number) => {\n        try {\n            const productAlreadyInCart = cart.find(\n                (product) => product.id === productId\n            );\n\n            if (!productAlreadyInCart) {\n                const { data: product } = await api.get<Product>(\n                    `products/${productId}`\n                );\n                const { data: stock } = await api.get<Stock>(\n                    `stock/${productId}`\n                );\n\n                if (stock.amount > 0) {\n                    setCart([...cart, { ...product, amount: 1 }]);\n                    localStorage.setItem(\n                        \"@RocktShoes:cart\",\n                        JSON.stringify([...cart, { ...product, amount: 1 }])\n                    );\n                    toast(\"Adicionado ao carrinho!\");\n                    return;\n                }\n            }\n\n            if (productAlreadyInCart) {\n                const { data: stock } = await api.get(`stock/${productId}`);\n\n                if (stock.amount > productAlreadyInCart.amount) {\n                    const updateCart = cart.map((cartItem) =>\n                        cartItem.id === productId\n                            ? {\n                                  ...cartItem,\n                                  amount: Number(cartItem.amount) + 1,\n                              }\n                            : cartItem\n                    );\n\n                    setCart(updateCart);\n                    localStorage.setItem(\n                        \"@RocktShoes:cart\",\n                        JSON.stringify(updateCart)\n                    );\n                    return;\n                } else {\n                    toast.error(\"Quantidade solicítada está fora de estoque!\");\n                }\n            }\n        } catch {\n            toast.error(\"Erro ao adicionar um produto!\");\n        }\n    };\n\n    const removeProduct = (productId: number) => {\n        try {\n            const productExists = cart.some(\n                (cartProduct) => cartProduct.id === productId\n            );\n\n            if (!productExists) {\n                toast.error(\"Erro ao excluir um produto!\");\n                return;\n            }\n\n            const updateCart = cart.filter(\n                (cartItem) => cartItem.id !== productId\n            );\n            setCart(updateCart);\n            localStorage.setItem(\n                \"@RocktShoes:cart\",\n                JSON.stringify(updateCart)\n            );\n        } catch {\n            toast.error(\"Erro ao remover um produto!\");\n        }\n    };\n\n    const updateProductAmount = async ({\n        productId,\n        amount,\n    }: UpdateProductAmount) => {\n        try {\n            if (amount < 1) {\n                toast.error(\"Erro ao alterar a quantidade de um produto!\");\n                return;\n            }\n\n            const response = await api.get(`stock/${productId}`);\n            const productAmount = response.data.amount;\n            const stockFree = amount > productAmount;\n\n            if (stockFree) {\n                toast.error(\"A quantidade solicítada está fora do estoque!\");\n                return;\n            }\n\n            const productExists = cart.some(\n                (cartProduct) => cartProduct.id === productId\n            );\n            if (!productExists) {\n                toast.error(\"Erro ao alterar a quantidade de produto!\");\n                return;\n            }\n\n            const updateCart = cart.map((cartItem) =>\n                cartItem.id === productId\n                    ? {\n                          ...cartItem,\n                          amount: amount,\n                      }\n                    : cartItem\n            );\n            setCart(updateCart);\n            localStorage.setItem(\n                \"@RocktShoes:cart\",\n                JSON.stringify(updateCart)\n            );\n        } catch {\n            toast.error(\"Erro ao alterar a quantidade de um produto!\");\n        }\n    };\n\n    return (\n        <CartContext.Provider\n            value={{ cart, addProduct, removeProduct, updateProductAmount }}\n        >\n            {children}\n        </CartContext.Provider>\n    );\n}\n\nexport function useCart(): CartContextData {\n    const context = useContext(CartContext);\n\n    return context;\n}\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport React, { useState, useEffect } from \"react\";\nimport { MdAddShoppingCart } from \"react-icons/md\";\n\nimport { ProductList } from \"./styles\";\nimport { api } from \"../../services/api\";\nimport { formatPrice } from \"../../util/format\";\nimport { useCart } from \"../../hooks/useCart\";\n\ninterface Product {\n    id: number;\n    title: string;\n    price: number;\n    image: string;\n}\n\ninterface ProductFormatted extends Product {\n    priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n    [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n    const [products, setProducts] = useState<ProductFormatted[]>([]);\n    const { addProduct, cart } = useCart();\n\n    const cartItemsAmount = cart.reduce((sumAmount, product) => {\n        sumAmount[product.id] = product.amount;\n        return sumAmount;\n    }, {} as CartItemsAmount);\n\n    useEffect(() => {\n        async function loadProducts() {\n            const response = await api.get(\"/products\");\n            const productsFormated = response.data.map(function (\n                product: Product\n            ) {\n                return { ...product, price: formatPrice(product.price) };\n            });\n            setProducts(productsFormated);\n        }\n\n        loadProducts();\n    }, []);\n\n    function handleAddProduct(id: number) {\n        addProduct(id);\n    }\n\n    return (\n        <ProductList>\n            {products.map((product) => (\n                <li key={product.id}>\n                    <img\n                        src={product.image}\n                        alt={product.title}\n                    />\n                    <strong>{product.title}</strong>\n                    <span>{product.price}</span>\n                    <button\n                        type=\"button\"\n                        data-testid=\"add-product-button\"\n                        onClick={() => handleAddProduct(product.id)}\n                    >\n                        <div data-testid=\"cart-product-quantity\">\n                            <MdAddShoppingCart size={16} color=\"#FFF\" />\n                            {cartItemsAmount[product.id] || 0}\n                        </div>\n\n                        <span>ADICIONAR AO CARRINHO</span>\n                    </button>\n                </li>\n            ))}\n        </ProductList>\n    );\n};\n\nexport default Home;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n\n    svg {\n      color: #7159c1;\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      svg {\n        color: ${darken(0.06, '#7159c1')};\n      }\n    }\n\n    &:disabled {\n      svg {\n        color: ${lighten(0.25, '#7159c1')};\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport React from \"react\";\nimport {\n    MdDelete,\n    MdAddCircleOutline,\n    MdRemoveCircleOutline,\n} from \"react-icons/md\";\n\nimport { useCart } from \"../../hooks/useCart\";\nimport { formatPrice } from \"../../util/format\";\nimport { Container, ProductTable, Total } from \"./styles\";\n\ninterface Product {\n    id: number;\n    title: string;\n    price: number;\n    image: string;\n    amount: number;\n}\n\nconst Cart = (): JSX.Element => {\n    const { cart, removeProduct, updateProductAmount } = useCart();\n\n    const cartFormatted = cart.map((product) => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n        subtotal: formatPrice(product.price * product.amount),\n    }));\n\n    const total = formatPrice(\n        cartFormatted.reduce((sumTotal, product) => {\n            sumTotal += product.price * product.amount;\n            return sumTotal;\n        }, 0)\n    );\n\n    function handleProductIncrement(product: Product) {\n        const IncrementArguments = {\n            productId: product.id,\n            amount: product.amount + 1,\n        };\n        updateProductAmount(IncrementArguments);\n    }\n\n    function handleProductDecrement(product: Product) {\n        const IncrementArguments = {\n            productId: product.id,\n            amount: product.amount - 1,\n        };\n        updateProductAmount(IncrementArguments);\n    }\n\n    function handleRemoveProduct(productId: number) {\n        removeProduct(productId);\n    }\n\n    return (\n        <Container>\n            <ProductTable>\n                <thead>\n                    <tr>\n                        <th aria-label=\"product image\" />\n                        <th>PRODUTO</th>\n                        <th>QTD</th>\n                        <th>SUBTOTAL</th>\n                        <th aria-label=\"delete icon\" />\n                    </tr>\n                </thead>\n                <tbody>\n                    {cartFormatted.map((product) => (\n                        <tr data-testid=\"product\" key={product.id}>\n                            <td>\n                                <img src={product.image} alt={product.title} />\n                            </td>\n                            <td>\n                                <strong>{product.title}</strong>\n                                <span>{product.priceFormatted}</span>\n                            </td>\n                            <td>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        data-testid=\"decrement-product\"\n                                        disabled={product.amount <= 1}\n                                        onClick={() => handleProductDecrement(product)}\n                                    >\n                                        <MdRemoveCircleOutline size={20} />\n                                    </button>\n                                    <input\n                                        type=\"text\"\n                                        data-testid=\"product-amount\"\n                                        readOnly\n                                        value={product.amount}\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        data-testid=\"increment-product\"\n                                        onClick={() => handleProductIncrement(product)}\n                                    >\n                                        <MdAddCircleOutline size={20} />\n                                    </button>\n                                </div>\n                            </td>\n                            <td>\n                                <strong>{product.subtotal}</strong>\n                            </td>\n                            <td>\n                                <button\n                                    type=\"button\"\n                                    data-testid=\"remove-product\"\n                                    onClick={() =>\n                                        handleRemoveProduct(product.id)\n                                    }\n                                >\n                                    <MdDelete size={20} />\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </ProductTable>\n\n            <footer>\n                <button type=\"button\">Finalizar pedido</button>\n\n                <Total>\n                    <span>TOTAL</span>\n                    <strong>{total}</strong>\n                </Total>\n            </footer>\n        </Container>\n    );\n};\n\nexport default Cart;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\n\nconst Routes = (): JSX.Element => {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/cart\" component={Cart} />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/background.d1721c83.svg\";","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n    :root {\n        --red: #E52E4D;\n        --blue: #5429CC;\n        --blue: #202024;\n        --green: #33CC95;\n\n        --blue-light: #1A1A1D;\n\n        --text-title: #363F5F;\n        --text-body: #969CB3;\n\n        --backgroundShape: #29292E;\n        --backgroundBlack: #121214;\n        --background: #F0F2F5;\n        --background-dark: #222222;\n        --shape: #FFFFFF;\n\n        --input-background: #E7E9EE;\n        --input-border: #D7D7D7;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: #191920 url(${background}) no-repeat center top;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button {\n        font: 14px Roboto, sans-serif;\n    }\n\n    #root {\n        max-width: 1020px;\n        margin: 0 auto;\n        padding: 0 20px 50px;\n    }\n\n    button {\n        cursor: pointer;\n    }\n\n    body::-webkit-scrollbar {\n        width: 12px;\n    }\n\n    body::-webkit-scrollbar-track {\n        background: var(--backgroundShape);\n    }\n\n    body::-webkit-scrollbar-thumb {\n        background-color: var(--backgroundBlack);\n        border-radius: 20px;\n        border: 3px solid var(--blue-light);\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.eb50c339.svg\";","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n\n  a {\n    transition: opacity 0.2s;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MdShoppingBasket } from \"react-icons/md\";\n\nimport logo from \"../../assets/images/logo.svg\";\nimport { Container, Cart } from \"./styles\";\nimport { useCart } from \"../../hooks/useCart\";\n\nconst Header = (): JSX.Element => {\n    const { cart } = useCart();\n    const cartSize = cart.length;\n\n    return (\n        <Container>\n            <Link to=\"/\">\n                <img src={logo} alt=\"Rocketshoes\" />\n            </Link>\n\n            <Cart to=\"/cart\">\n                <div>\n                    <strong>Meu carrinho</strong>\n                    <span data-testid=\"cart-size\">\n                        {cartSize === 1\n                            ? `${cartSize} item`\n                            : `${cartSize} itens`}\n                    </span>\n                </div>\n                <MdShoppingBasket size={36} color=\"#FFF\" />\n            </Cart>\n        </Container>\n    );\n};\n\nexport default Header;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Routes from \"./routes\";\nimport GlobalStyles from \"./styles/global\";\nimport Header from \"./components/Header\";\nimport { CartProvider } from \"./hooks/useCart\";\n\nconst App = (): JSX.Element => {\n    return (\n        <BrowserRouter>\n            <CartProvider>\n                <GlobalStyles />\n                <Header />\n                <Routes />\n                <ToastContainer autoClose={3000} />\n            </CartProvider>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","/*\n *   Nome: Silvanei de Almeida Martins;\n *   E-mail: silvaneimartins_rcc@hotmail.com;\n *   Contato Telegram: (69) 9.8405-2620;\n *   Frase: Estamos em constante mudança no aprendizado;\n *   Assinatura: Silvanei Martins;\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}